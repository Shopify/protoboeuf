# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `minitest-color` gem.
# Please instead update this file by running `bin/tapioca gem minitest-color`.


# source://minitest-color//lib/minitest/color_plugin.rb#3
module Minitest
  class << self
    # source://minitest/5.24.0/lib/minitest.rb#323
    def __run(reporter, options); end

    # source://minitest/5.24.0/lib/minitest.rb#97
    def after_run(&block); end

    # source://minitest/5.24.0/lib/minitest.rb#19
    def allow_fork; end

    # source://minitest/5.24.0/lib/minitest.rb#19
    def allow_fork=(_arg0); end

    # source://minitest/5.24.0/lib/minitest.rb#69
    def autorun; end

    # source://minitest/5.24.0/lib/minitest.rb#19
    def backtrace_filter; end

    # source://minitest/5.24.0/lib/minitest.rb#19
    def backtrace_filter=(_arg0); end

    # source://minitest/5.24.0/lib/minitest.rb#18
    def cattr_accessor(name); end

    # source://minitest/5.24.0/lib/minitest.rb#1208
    def clock_time; end

    # source://minitest/5.24.0/lib/minitest.rb#303
    def empty_run!(options); end

    # source://minitest/5.24.0/lib/minitest.rb#19
    def extensions; end

    # source://minitest/5.24.0/lib/minitest.rb#19
    def extensions=(_arg0); end

    # source://minitest/5.24.0/lib/minitest.rb#336
    def filter_backtrace(bt); end

    # source://minitest/5.24.0/lib/minitest.rb#19
    def info_signal; end

    # source://minitest/5.24.0/lib/minitest.rb#19
    def info_signal=(_arg0); end

    # source://minitest/5.24.0/lib/minitest.rb#125
    def init_plugins(options); end

    # source://minitest/5.24.0/lib/minitest.rb#109
    def load_plugins; end

    # source://minitest/5.24.0/lib/minitest.rb#19
    def parallel_executor; end

    # source://minitest/5.24.0/lib/minitest.rb#19
    def parallel_executor=(_arg0); end

    # source://minitest-color//lib/minitest/color_plugin.rb#10
    def plugin_color_init(options); end

    # source://minitest-color//lib/minitest/color_plugin.rb#4
    def plugin_color_options(opts, options); end

    # source://minitest/5.24.0/lib/minitest/pride_plugin.rb#10
    def plugin_pride_init(options); end

    # source://minitest/5.24.0/lib/minitest/pride_plugin.rb#4
    def plugin_pride_options(opts, _options); end

    # source://minitest/5.24.0/lib/minitest.rb#143
    def process_args(args = T.unsafe(nil)); end

    # source://minitest/5.24.0/lib/minitest.rb#104
    def register_plugin(name_or_mod); end

    # source://minitest/5.24.0/lib/minitest.rb#19
    def reporter; end

    # source://minitest/5.24.0/lib/minitest.rb#19
    def reporter=(_arg0); end

    # source://minitest/5.24.0/lib/minitest.rb#269
    def run(args = T.unsafe(nil)); end

    # source://minitest/5.24.0/lib/minitest.rb#1199
    def run_one_method(klass, method_name); end

    # source://minitest/5.24.0/lib/minitest.rb#19
    def seed; end

    # source://minitest/5.24.0/lib/minitest.rb#19
    def seed=(_arg0); end
  end
end

# source://minitest-color//lib/minitest/color_plugin.rb#18
class Minitest::Color < ::Minitest::Reporter
  # source://minitest-color//lib/minitest/color_plugin.rb#33
  def record(result); end

  private

  # source://minitest-color//lib/minitest/color_plugin.rb#42
  def color_code(result); end

  class << self
    # source://minitest-color//lib/minitest/color_plugin.rb#25
    def color!; end

    # @return [Boolean]
    #
    # source://minitest-color//lib/minitest/color_plugin.rb#29
    def color?; end
  end
end

# source://minitest-color//lib/minitest/color_plugin.rb#19
Minitest::Color::ESC = T.let(T.unsafe(nil), String)

# source://minitest-color//lib/minitest/color_plugin.rb#21
Minitest::Color::GREEN = T.let(T.unsafe(nil), String)

# source://minitest-color//lib/minitest/color_plugin.rb#20
Minitest::Color::NND = T.let(T.unsafe(nil), String)

# source://minitest-color//lib/minitest/color_plugin.rb#22
Minitest::Color::RED = T.let(T.unsafe(nil), String)

# source://minitest-color//lib/minitest/color_plugin.rb#23
Minitest::Color::YELLOW = T.let(T.unsafe(nil), String)
