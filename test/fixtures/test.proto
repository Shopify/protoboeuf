syntax = "proto3";

option cc_enable_arenas = true;
option java_multiple_files = true;
option java_outer_classname = "FooProto";
option java_package = "com.shopify.foo";
option objc_class_prefix = "GTP";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

// Single-line comment
// Another comment
message Test1 {
  optional int32 a = 1;
}

message EmptyMessage {
}

message TestSigned {
  optional sint32 a = 1;
}

message TestString {
  optional string a = 1;
}

message TestBytes {
  optional string a = 1;
}

message TestMessage {
  string id = 1;
  uint64 shop_id = 2; // Comment after field
  bool boolean = 3;
  bytes uuid = 4;
}

// Field numbers not in increasing order
message TestOutOfOrder {
  uint32 a = 1;
  uint32 b = 3;
  uint32 c = 2;
}

/*
Multi-line comment
Heyyy
*/
message TestMessage2 {
  string id = 1;
  uint64 shop_id = 2; // Comment after field
  bool boolean = 3;
  repeated uint32 packed_field = 4 [packed = true, deprecated = true];
  uint32 deprecated_field = 5 [deprecated = true];
}

enum VehicleType {
  BIKE = /* C-style comment */ 0;
  SKATEBOARD = 1;
  CAR = 2;
  BIG_AMERICAN_SUV = 3; /* Block comment */
  PICKUP_TRUCK = 4;
}

message TestEmbeddee {
  uint64 value = 1;
}

message TestEmbedder {
  reserved 7;
  uint64 id = 1;
  // Comment between fields
  TestEmbeddee value = 2;
  string message = 3;
}

message TestReserved {
  reserved 2;

  string message = 3;

  reserved 7;
  reserved 9 to 11;
  reserved 15, 16;
  reserved 20 to 26, 30, 35 to 42;
  reserved 999 to max;
}

enum TestReservedEnum {
  CONST_ZERO = 0;
  CONST_ONE = 1;

  reserved 2;
  reserved 999 to max;
}

message TestRepeatedField {
  repeated uint32 e = 1;
  int64 another_value = 2;
}

message TestInt64 {
  int64 int_64 = 1;
}

message TestSint64 {
  sint64 sint_64 = 1;
}

message TestSInt64 {
  sint64 value = 1;
}

message TestSInt32 {
  sint32 value = 1;
}

message TestFixed64 {
  fixed64 value = 1;
}

message TestSFixed64 {
  sfixed64 value = 1;
}

message TestFixed32 {
  fixed32 value = 1;
}

message TestSFixed32 {
  sfixed32 value = 1;
}

message TestDouble {
  double value = 1;
}

message TestFloat {
  float value = 1;
}

message TestTwoFields {
  uint32 a = 1;
  sint32 b = 2;
}

message TestMsgGoogleTypes {
  int64 int_64 = 4;
  google.protobuf.UInt64Value a_id = 1;
  google.protobuf.StringValue c_id = 2;
  sint64 sint_64 = 3;
}

message TestMessageWithOneOf {
  string id = 1;
  uint64 shop_id = 2;

  oneof oneof_field {
    uint32 oneof_u32 = 5;
    TestEmbeddee oneof_msg = 6;
    string oneof_str = 7;
  }

  bool boolean = 3;
}

// Nested/local message
message Bucket {
  WorldeCoords loc1 = 1;

  // Nested messages are just locally available definitions
  message WorldeCoords {
    google.protobuf.DoubleValue lat = 5;
    google.protobuf.DoubleValue lng = 6;
  }

  WorldeCoords loc2 = 2;

  enum NestedEnum {
    FOO = 0;
    BAR = 1;
  }

  NestedEnum kind = 3;
}

message ManyOptional {
  optional uint64 a = 1;
  optional uint64 b = 2;
  uint64 c = 3;
  optional uint64 d = 4;
}

enum EnumAllTheInts {
  FOO = 0;
  BAR = -1; // Allowed by the spec
  BIF = 0xFF0000;
  BIF2 = -0xFF0000;
}

message BucketObj {
  message OrigFoo {
    oneof foo_bar_bif {
      uint32 i = 1;
      string s = 2;
    }
    sint32 q = 7;
  }

  sint32 fi = 5;
}

message HasMap {
  map<string, int64> something = 1;
  int64 number = 2;
}

message NoFieldsLol {
}

message FixedWidthNumbers {
  double a = 1;
  optional double b = 2;
  fixed64 c = 3;
  float d = 4;
  fixed32 e = 5;
}

message UnpackedFields {
  uint32 a = 1;
  repeated uint32 ids = 2 [packed = false];
  uint32 b = 3;
}

message RepeatedStrings {
  uint32 a = 1;
  repeated string names = 2;
  uint32 b = 3;
}

message RepeatedSubMessages {
  repeated TestSint64 ints = 1;
}

message ObjWithEmbedded {
  uint32 a = 1;

  message Embedded {
    uint32 b = 1;
    uint32 c = 2;
  }

  Embedded b = 2;
}

enum SimpleEnum {
  ZERO = 0;
  ONE = 1;
  TWO = 2;
}

message HasEnum {
  SimpleEnum a = 1;
}

message HasSubEnum {
  enum Thing {
    BASE = 0;
    NEAT = 1;
  }

  Thing a = 1;
}

// Google's well-known types
message HasKnownTypeBool {
  google.protobuf.BoolValue id = 1;
}
message HasKnownTypeInt32 {
  google.protobuf.Int32Value id = 1;
}
message HasKnownTypeInt64 {
  google.protobuf.Int64Value id = 1;
}
message HasKnownTypeUInt32 {
  google.protobuf.UInt32Value id = 1;
}
message HasKnownTypeUInt64 {
  google.protobuf.UInt64Value id = 1;
}
message HasKnownTypeFloat {
  google.protobuf.FloatValue id = 1;
}
message HasKnownTypeDouble {
  google.protobuf.DoubleValue id = 1;
}
message HasKnownTypeString {
  google.protobuf.StringValue id = 1;
}
message HasKnownTypeBytes {
  google.protobuf.BytesValue id = 1;
}
message HasKnownTypeTimestamp {
  google.protobuf.Timestamp t = 1;
}

message EnumEncoder {
  enum Enum {
    ZERO = 0;
    ONE = 1;
    TWO = 2;
    THREE = 3;
    INT_MAX = 0x7FFFFFFF;
  }

  Enum value = 1;
}

message RepeatedEncoder {
  repeated uint32 intValues = 1;
  repeated uint32 looseIntValues = 2 [packed = false];
  repeated string stringValues = 3;
}

message MapEncoder {
  map<int32, int32> intIntMap = 1;
  map<string, uint32> stringIntMap = 2;
  map<string, string> stringStringMap = 3;
}

message SubmessageEncoder {
  message Submessage {
    uint32 value = 1;
    string strValue = 2;
  }

  Submessage value = 1;
}

message OneOfEncoder {
  string id = 1;
  uint64 shop_id = 2;

  message TestEmbeddee {
    uint64 value = 1;
  }

  oneof oneof_field {
    uint32 oneof_u32 = 5;
    TestEmbeddee oneof_msg = 6;
    string oneof_str = 7;
  }

  bool boolean = 3;
}

message TooManyFields {
  uint32 a = 32;
}

message TooManyFieldsAgain {
  uint32 a = 31;
  uint32 b = 36;
}
